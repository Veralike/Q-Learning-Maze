# 该文件用于重构标准的迷宫图片

import numpy as np
import cv2

CHANNEL_NUM = 3
HEIGHT = 500
WIDTH = 1000
AXIS_HEIGHT = 25
AXIS_WIDTH = 50
ROW = int(HEIGHT / AXIS_HEIGHT)
COL = int(WIDTH / AXIS_WIDTH)
START_X = 1
START_Y = 5
END_X = 17
END_Y = 18
INPUT_PATH = './image_input'


def maze_image_process():
    """
    经过Matlab测试，我们知道了原始图像中蓝色障碍的长度为50，宽度或高度为25（估计值）
    以图片的高度为X轴，宽度为Y轴建立坐标系，起始坐标为(1, 5)，终点坐标为(17, 18)。
    每个单元格的坐标为单元格的左上角坐标
    由于原始图片不准确，这里使用OpenCV重新构建迷宫地图
    :return: 迷宫尺寸、单元格尺寸、起始坐标和终点坐标
    """
    # 原始图片中的障碍坐标
    barrier = [[1, 1], [1, 2], [1, 3], [1, 4], [1, 12], [1, 13], [1, 14], [1, 15], [1, 16],
               [2, 6], [2, 18],
               [3, 6], [3, 10], [3, 11], [3, 12], [3, 13], [3, 14], [3, 18],
               [4, 2], [4, 3], [4, 4], [4, 6], [4, 18],
               [5, 3], [5, 6], [5, 9], [5, 18],
               [6, 3], [6, 6], [6, 9], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18],
               [7, 3], [7, 6], [7, 9], [7, 18],
               [8, 1], [8, 6], [8, 9], [8, 18],
               [9, 1], [9, 2], [9, 3], [9, 4], [9, 5], [9, 6], [9, 9], [9, 12], [9, 13], [9, 14], [9, 15], [9, 16], [9, 18],
               [10, 1], [10, 9], [10, 12],
               [11, 1], [11, 9], [11, 12],
               [12, 1], [12, 3], [12, 4], [12, 5], [12, 6], [12, 7], [12, 9], [12, 12],
               [13, 1], [13, 3], [13, 9], [13, 12], [13, 14], [13, 15], [13, 16], [13, 17], [13, 18],
               [14, 1], [14, 3], [14, 6], [14, 9], [14, 12], [14, 18],
               [15, 1], [15, 3], [15, 6], [15, 9], [15, 12], [15, 18],
               [16, 1], [16, 3], [16, 6], [16, 12], [16, 13], [16, 14], [16, 15], [16, 16], [16, 18],
               [17, 1], [17, 3], [17, 5], [17, 6], [17, 7], [17, 8], [17, 9], [17, 10],
               [18, 1], [18, 9],
               [19, 9]]

    # 使用OpenCV重新构建标准的迷宫图片
    image = np.zeros([HEIGHT, WIDTH, CHANNEL_NUM])
    for i in range(ROW):
        for j in range(COL):
            for x in range(i*AXIS_HEIGHT, (i+1)*AXIS_HEIGHT, 1):
                for y in range(j*AXIS_WIDTH, (j+1)*AXIS_WIDTH, 1):
                    image[x][y] = [59, 188, 253]
                    for [k, t] in barrier:
                        if i == k and j == t:
                            image[x][y] = [168, 38, 61]
                    if i == 1 and j == 5:
                        image[x][y] = [15, 255, 255]
                    if i == 17 and j == 18:
                        image[x][y] = [15, 255, 255]

    cv2.imwrite(INPUT_PATH + '/maze_input.png', image)
    print('\n已生成标准迷宫图片。\n')

    return ROW, COL, AXIS_HEIGHT, AXIS_WIDTH, \
        START_X, START_Y, END_X, END_Y, barrier
